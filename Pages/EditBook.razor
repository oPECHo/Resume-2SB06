@page "/editdatabook/{index:int}"
@using Resume.Data
@inject BookService BS
@inject IJSRuntime JS

@if (Index < BS.Books.Length)
{
    <div class="container mt-5">
        <h3>Edit Book: @editModel.Title</h3>
        <EditForm Model="@editModel" class="mt-3">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="title">Title:</label>
                        <InputText id="title" class="form-control" @bind-Value="editModel.Title" />
                    </div>
                    <div class="form-group">
                        <label for="author">Author:</label>
                        <InputText id="author" class="form-control" @bind-Value="editModel.Author" />
                    </div>
                    <div class="form-group">
                        <label for="description" style="min-width: 120px;">Description:</label>
                        <InputText id="description" class="form-control" @bind-Value="editModel.Description" />
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="publicationyear">Publication Year:</label>
                        <InputNumber id="publicationyear" class="form-control" @bind-Value="editModel.PublicationYear" />
                    </div>
                    <div class="form-group">
                        <label for="price">Price:</label>
                        <InputNumber id="price" class="form-control" @bind-Value="editModel.Price" />
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-6">
                    <button class="btn btn-danger" onclick="history.back()">Cancel</button>
                    <button class="btn btn-success" @onclick="SaveData">Save</button>
                </div>
            </div>
        </EditForm>
    </div>
}
@code {
    [Parameter]
    public int Index { get; set; }
    private Book editModel;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Index < BS.Books.Length)
        {
            var data = BS.Books[Index];
            editModel = new Book
                {
                    Title = data.Title,
                    Author = data.Author,
                    Description = data.Description,
                    PublicationYear = data.PublicationYear,
                    Price = data.Price
                };
        }
    }

    private async Task SaveData()
    {
        BS.Books[Index] = editModel;
        await JS.InvokeVoidAsync("history.back");
    }
}
